-- apply changes
create schema if not exists collezioni;

create table beyblade (
  id                            integer generated by default as identity not null,
  descriptionItem               TEXT,
  owned                         boolean default false not null,
  wish                          boolean default false not null,
  quantityItem                  integer,
  ratchet_id                    integer,
  punta_id                      integer,
  blade_id                      integer,
  category_id                   integer,
  note                          TEXT,
  nameItem                      varchar(255),
  formato                       varchar(11),
  constraint ck_beyblade_formato check ( formato in ('TAKARA_TOMY','HASBRO')),
  constraint uq_beyblade_nameitem unique (nameItem),
  constraint uq_beyblade_blade_id unique (blade_id),
  constraint pk_beyblade primary key (id)
);

create table cards (
  id                            integer generated by default as identity not null,
  name_category                 integer,
  constraint pk_cards primary key (id)
);

create table collezioni.category (
  id                            integer generated by default as identity not null,
  name_category                 varchar(255) not null,
  constraint pk_category primary key (id)
);

create table pokemon (
  id                            integer generated by default as identity not null,
  descriptionItem               TEXT,
  owned                         boolean default false not null,
  wish                          boolean default false not null,
  quantityItem                  integer,
  BuyPrice                      float,
  CurrentPrice                  float,
  cards_id                      integer,
  nameItem                      varchar(255),
  languageItem                  varchar(255),
  set_carte                     varchar(255),
  cardNumber                    varchar(255),
  constraint uq_pokemon_nameitem unique (nameItem),
  constraint pk_pokemon primary key (id)
);

create table test_table (
  id                            bigint generated by default as identity not null,
  name                          varchar(255) not null,
  description                   varchar(255),
  constraint pk_test_table primary key (id)
);

create table tipo_beyblade_blades (
  id                            integer generated by default as identity not null,
  weight                        float,
  owned                         boolean default false not null,
  beyblade_id                   integer,
  spin                          varchar(5) not null,
  type                          varchar(7),
  formato                       varchar(11),
  nameBlades                    varchar(255) not null,
  constraint ck_tipo_beyblade_blades_spin check ( spin in ('RIGHT','LEFT')),
  constraint ck_tipo_beyblade_blades_type check ( type in ('ATTACK','DEFENSE','STAMINA','BALANCE')),
  constraint ck_tipo_beyblade_blades_formato check ( formato in ('TAKARA_TOMY','HASBRO')),
  constraint uq_tipo_beyblade_blades_beyblade_id unique (beyblade_id),
  constraint pk_tipo_beyblade_blades primary key (id)
);

create table tipo_beyblade_punte (
  id                            integer generated by default as identity not null,
  weight                        float not null,
  originBeyFrom                 TEXT,
  owned                         boolean default false not null,
  namePoint                     varchar(255) not null,
  formato                       varchar(11),
  constraint ck_tipo_beyblade_punte_formato check ( formato in ('TAKARA_TOMY','HASBRO')),
  constraint pk_tipo_beyblade_punte primary key (id)
);

create table tipo_beyblade_ratchet (
  id                            integer generated by default as identity not null,
  Bumps                         integer not null,
  Height                        integer not null,
  Weight                        float not null,
  originBeyFrom                 TEXT,
  owned                         boolean not null,
  formato                       varchar(11),
  name_ratchet                  varchar(255) not null,
  constraint ck_tipo_beyblade_ratchet_formato check ( formato in ('TAKARA_TOMY','HASBRO')),
  constraint pk_tipo_beyblade_ratchet primary key (id)
);

create table tipo_cards_rarity (
  pokemon_id                    integer,
  cards_rarity                  varchar(255) not null,
  constraint pk_tipo_cards_rarity primary key (cards_rarity)
);

-- foreign keys and indices
create index ix_beyblade_ratchet_id on beyblade (ratchet_id);
alter table beyblade add constraint fk_beyblade_ratchet_id foreign key (ratchet_id) references tipo_beyblade_ratchet (id) on delete restrict on update restrict;

create index ix_beyblade_punta_id on beyblade (punta_id);
alter table beyblade add constraint fk_beyblade_punta_id foreign key (punta_id) references tipo_beyblade_punte (id) on delete restrict on update restrict;

alter table beyblade add constraint fk_beyblade_blade_id foreign key (blade_id) references tipo_beyblade_blades (id) on delete restrict on update restrict;

create index ix_beyblade_category_id on beyblade (category_id);
alter table beyblade add constraint fk_beyblade_category_id foreign key (category_id) references collezioni.category (id) on delete restrict on update restrict;

create index ix_cards_name_category on cards (name_category);
alter table cards add constraint fk_cards_name_category foreign key (name_category) references collezioni.category (id) on delete restrict on update restrict;

create index ix_pokemon_cards_id on pokemon (cards_id);
alter table pokemon add constraint fk_pokemon_cards_id foreign key (cards_id) references cards (id) on delete restrict on update restrict;

alter table tipo_beyblade_blades add constraint fk_tipo_beyblade_blades_beyblade_id foreign key (beyblade_id) references beyblade (id) on delete restrict on update restrict;

create index ix_tipo_cards_rarity_pokemon_id on tipo_cards_rarity (pokemon_id);
alter table tipo_cards_rarity add constraint fk_tipo_cards_rarity_pokemon_id foreign key (pokemon_id) references pokemon (id) on delete restrict on update restrict;

